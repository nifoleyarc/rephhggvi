import { Telegraf } from 'telegraf'
import dotenv from 'dotenv'

dotenv.config()

class TelegrafBot {
  constructor() {
    this.botToken = process.env.TELEGRAM_BOT_TOKEN
    this.miniAppUrl = process.env.MINI_APP_URL || 'https://your-mini-app.com'
    
    if (!this.botToken) {
      console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
      return
    }
    
    // –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    this.bot = new Telegraf(this.botToken)
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    this.setupCommands()
    
    console.log('ü§ñ Telegraf –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–±–µ–∑ polling)')
    console.log(`   Mini App URL: ${this.miniAppUrl}`)
  }
  
  setupCommands() {
    // –ö–æ–º–∞–Ω–¥–∞ /start
    this.bot.start(async (ctx) => {
      const user = ctx.from
      console.log(`üë§ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç: ${user.first_name} (ID: ${user.id})`)
      
      const welcomeMessage = `üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞—Ä—Ö–∏–≤ —Å—Ç—Ä–∏–º–æ–≤ GENSYXA!

üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:`
      
      const keyboard = {
        inline_keyboard: [
          [
            {
              text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
              web_app: {
                url: this.miniAppUrl
              }
            }
          ]
        ]
      }
      
      try {
        await ctx.reply(welcomeMessage, {
          reply_markup: keyboard
        })
        console.log('‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message)
      }
    })
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    this.bot.on('message', (ctx) => {
      const text = ctx.message.text || ''
      if (!text.startsWith('/')) {
        console.log(`‚ùå –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: "${text.substring(0, 50)}..."`)
      }
    })
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    this.bot.catch((err, ctx) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err)
    })
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook'–æ–≤ –≤–º–µ—Å—Ç–æ polling
  async handleWebhook(update) {
    if (!this.bot) {
      console.error('‚ùå –ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
      return false
    }
    
    try {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º update —á–µ—Ä–µ–∑ Telegraf
      await this.bot.handleUpdate(update)
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error.message)
      return false
    }
  }
  
  // –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º polling - –æ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å webhook
  async start() {
    if (!this.bot) {
      console.error('‚ùå –ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
      return false
    }
    
    try {
      console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Telegraf –±–æ—Ç–∞ (webhook —Ä–µ–∂–∏–º)...')
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
      const botInfo = await this.bot.telegram.getMe()
      console.log(`‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤: @${botInfo.username} (${botInfo.first_name})`)
      console.log('‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è webhook —Ä–µ–∂–∏–º (polling –æ—Ç–∫–ª—é—á–µ–Ω)')
      
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±–æ—Ç–∞:', error.message)
      return false
    }
  }
  
  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
  stop() {
    if (this.bot) {
      console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegraf –±–æ—Ç–∞...')
      this.bot.stop()
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  async getStatus() {
    if (!this.bot) {
      return { ok: false, error: '–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω' }
    }
    
    try {
      const botInfo = await this.bot.telegram.getMe()
      return { 
        ok: true, 
        bot: {
          id: botInfo.id,
          username: botInfo.username,
          first_name: botInfo.first_name
        }
      }
    } catch (error) {
      return { ok: false, error: error.message }
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const telegrafBot = new TelegrafBot()

export default telegrafBot