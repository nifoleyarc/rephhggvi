// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
export const API_CONFIG = {
  // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API
  getBaseURL() {
    // –í production –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (import.meta.env.PROD) {
      const apiUrl = import.meta.env.VITE_API_URL
      if (apiUrl) {
        console.log('üåê Using API URL from environment:', apiUrl)
        return apiUrl
      }
      
      // Fallback –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –µ—Å–ª–∏ API URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      console.log('‚ö†Ô∏è VITE_API_URL not set, using fallback')
      return 'https://gensyxavods.com/api'
    }
    
    // –í development –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    return 'http://localhost:3000/api'
  },

  // –ü–æ–ª–Ω—ã–π URL –¥–ª—è API
  get baseURL() {
    return this.getBaseURL()
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
  async checkConnection() {
    try {
      const response = await fetch(`${this.baseURL.replace('/api', '')}/`, {
        headers: this.getDataHeaders()
      })
      return response.ok
    } catch (error) {
      console.error('API connection check failed:', error)
      return false
    }
  },

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  _authState: {
    isAuthenticated: false,
    authMethod: null,
    authData: null
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  setAuthState(isAuthenticated, method = null, data = null) {
    this._authState = {
      isAuthenticated,
      authMethod: method,
      authData: data
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  getAuthState() {
    return this._authState
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ headers –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  getAuthHeaders(telegramInitData = null) {
    const headers = {
      'Content-Type': 'application/json',
    }

    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: Telegram InitData (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
    if (telegramInitData) {
      headers['x-telegram-init-data'] = telegramInitData
      return headers
    }

    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if (this._authState.isAuthenticated) {
      if (this._authState.authMethod === 'telegram' && this._authState.authData) {
        headers['x-telegram-init-data'] = this._authState.authData
      }
      // –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä–æ–ª—å –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
      if (this._authState.authMethod === 'password') {
        headers['x-admin-auth'] = 'true'
      }
      return headers
    }

    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: Frontend –∫–ª—é—á –∫–∞–∫ fallback –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    const frontendKey = import.meta.env.VITE_FRONTEND_KEY
    if (frontendKey) {
      headers['x-frontend-key'] = frontendKey
    }

    return headers
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ headers –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ —Å API –∫–ª—é—á–æ–º
  getAPIHeaders(apiKey = null) {
    const headers = {
      'Content-Type': 'application/json',
    }

    if (apiKey) {
      headers['Authorization'] = `Bearer ${apiKey}`
    }

    return headers
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ headers –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º (–¥–ª—è GET –∑–∞–ø—Ä–æ—Å–æ–≤)
  getDataHeaders() {
    const headers = {
      'Content-Type': 'application/json',
    }

    // –î–æ–±–∞–≤–ª—è–µ–º frontend –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    const frontendKey = import.meta.env.VITE_FRONTEND_KEY
    if (frontendKey) {
      headers['x-frontend-key'] = frontendKey
    }

    return headers
  }
}

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
export const DEMO_DATA = {
  streams: [
    {
      _id: 'demo-1',
      title: '–î–µ–º–æ —Å—Ç—Ä–∏–º #1 - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
      date: '2024-01-15T20:00:00.000Z',
      categories: ['just_chatting'],
      tags: ['#demo', '#test'],
      telegramUrl: 'https://t.me/demo/1',
      thumbnail: {
        url: 'https://via.placeholder.com/320x180/1a1a1a/ffffff?text=Demo+Stream+1',
        source: 'demo'
      }
    },
    {
      _id: 'demo-2',
      title: '–î–µ–º–æ —Å—Ç—Ä–∏–º #2 - –ü—Ä–æ–≤–µ—Ä–∫–∞ API',
      date: '2024-01-20T18:30:00.000Z',
      categories: ['gaming'],
      tags: ['#demo', '#gaming'],
      telegramUrl: 'https://t.me/demo/2',
      thumbnail: {
        url: 'https://via.placeholder.com/320x180/1a1a1a/ffffff?text=Demo+Stream+2',
        source: 'demo'
      }
    }
  ],
  categories: [
    { _id: 'demo-cat-1', name: 'Just Chatting', tag: 'just_chatting' },
    { _id: 'demo-cat-2', name: 'Gaming', tag: 'gaming' }
  ]
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è API –∑–∞–ø—Ä–æ—Å–æ–≤
export async function safeApiCall(apiCall, fallbackData = null) {
  try {
    return await apiCall()
  } catch (error) {
    console.error('API call failed:', error)
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å fallback –¥–∞–Ω–Ω—ã–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö
    if (fallbackData) {
      console.log('Using fallback data')
      return fallbackData
    }
    
    // –ò–Ω–∞—á–µ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    throw error
  }
} 