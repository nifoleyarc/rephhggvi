import express from 'express'
import cors from 'cors'
import path from 'path'
import { fileURLToPath } from 'url'
import dotenv from 'dotenv'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config()

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã
import authRoutes from './server/routes/auth.js'
import streamsRoutes from './server/routes/streams.js'
import categoriesRoutes from './server/routes/categories.js'
import webhookRoutes from './server/routes/webhook.js'
import thumbnailRoutes from './server/routes/thumbnails.js'

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –∑–∞—â–∏—Ç—ã
import { requireAuth, requireReadAuth, requireDataAccess, logAuth } from './server/middleware/auth.js'
import { rateLimit } from './server/middleware/rateLimit.js'

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Telegraf –±–æ—Ç–∞
import telegrafBot from './server/bot/telegrafBot.js'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

const app = express()
const PORT = process.env.PORT || 3000

// Middleware
app.use(cors({
  origin: [
    'https://nifoleyarc.github.io', // GitHub Pages –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
    'https://nifoleyarc.github.io/rephhggvi', // GitHub Pages –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    'http://localhost:5173', // Vite dev server
    'http://localhost:3000', // –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    process.env.FRONTEND_URL // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π URL –∏–∑ env
  ].filter(Boolean),
  credentials: true
}))

app.use(express.json({ limit: '10mb' }))
app.use(express.urlencoded({ extended: true, limit: '10mb' }))

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`${new Date().toISOString()} - ${req.method} ${req.path}`)
  next()
})

// API —Ä–æ—É—Ç—ã —Å –∑–∞—â–∏—Ç–æ–π
app.use('/api/auth', rateLimit, authRoutes)
app.use('/api/streams', rateLimit, requireReadAuth, logAuth, streamsRoutes) // –ß—Ç–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º, –∑–∞–ø–∏—Å—å - —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
app.use('/api/categories', rateLimit, requireReadAuth, logAuth, categoriesRoutes)
app.use('/api/webhook', webhookRoutes) // Webhook –Ω–µ –∑–∞—â–∏—â–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –æ—Ç Telegram (–¥–ª—è –ø–æ—Å—Ç–æ–≤ –∫–∞–Ω–∞–ª–∞)
app.use('/api/refresh-thumbnail', rateLimit, requireAuth, logAuth, thumbnailRoutes) // –ü–æ–ª–Ω–∞—è –∑–∞—â–∏—Ç–∞
app.use('/api/refresh-thumbnails', rateLimit, requireAuth, logAuth, thumbnailRoutes)

// –£–±–∏—Ä–∞–µ–º —Ä–∞–∑–¥–∞—á—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤, —Ç–∞–∫ –∫–∞–∫ frontend –Ω–∞ GitHub Pages
// app.use(express.static(path.join(__dirname, 'dist')))

// API health check
app.get('/', (req, res) => {
  res.json({ 
    message: 'Backend status: ok'
  })
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ä–æ—É—Ç–æ–≤
app.get('*', (req, res) => {
  res.status(404).json({ error: 'API endpoint not found' })
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('Error:', err)
  res.status(500).json({ 
    error: 'Internal server error',
    message: process.env.NODE_ENV === 'development' ? err.message : 'Something went wrong'
  })
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', async () => {
  console.log(`üöÄ Server running on port ${PORT}`)
  console.log(`üì± Frontend: http://localhost:${PORT}`)
  console.log(`üîó API: http://localhost:${PORT}/api`)
  console.log(`üìä Environment: ${process.env.NODE_ENV || 'development'}`)
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º Telegraf –±–æ—Ç–∞
  console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegraf –±–æ—Ç–∞...')
  const botStarted = await telegrafBot.start()
  
  if (botStarted) {
    console.log('‚úÖ Telegraf –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling)')
  } else {
    console.warn('‚ö†Ô∏è Telegraf –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω')
  }
})

// Graceful shutdown
const gracefulShutdown = () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...')
  telegrafBot.stop()
  process.exit(0)
}

process.on('SIGTERM', gracefulShutdown)
process.on('SIGINT', gracefulShutdown)

export default app 